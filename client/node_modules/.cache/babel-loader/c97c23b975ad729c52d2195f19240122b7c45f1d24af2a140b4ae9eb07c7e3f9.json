{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { initialState } from \"../__State__/InitialState\";\n// defining the initial State\n\nexport const getCustomer = createAsyncThunk(\"customer/getCustomer\", async () => {\n  let baseUrl = \"http://localhost:3001/\";\n  return await axios.get(baseUrl + \"customers\").then(response => response.data).catch(error => console.log(error));\n});\nconst customer = createSlice({\n  name: \"getSlice\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getCustomer.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(getCustomer.fulfilled, (state, action) => {\n      state.loading = false;\n      state.users = action.payload;\n      state.error = \"\";\n    });\n    builder.addCase(getCustomer.rejected, (state, action) => {\n      state.loading = false;\n      state.users = [];\n      state.error = action.error.message || \"SomeThing Went Wrong\";\n    });\n  }\n});\nexport default customer.reducer;\n// export default.getSliceActions  getSlice.actions","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","getCustomer","baseUrl","get","then","response","data","catch","error","console","log","customer","name","reducers","extraReducers","builder","addCase","pending","state","loading","fulfilled","action","users","payload","rejected","message","reducer"],"sources":["C:/Users/faiz.ahmed/Documents/source fuse training/Loopback/Assignment/Loopback Assignment/client/src/features/Customer/Customer.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { CustomerState, user } from \"../../Interface/Interface\";\r\nimport { initialState } from \"../__State__/InitialState\";\r\n// defining the initial State\r\n\r\n\r\n\r\nexport const getCustomer = createAsyncThunk(\"customer/getCustomer\", async () => {\r\n  let baseUrl = \"http://localhost:3001/\";\r\n  return await axios\r\n    .get(baseUrl + \"customers\")\r\n    .then((response) => response.data)\r\n    .catch((error) => console.log(error));\r\n});\r\n\r\n\r\nconst customer = createSlice({\r\n  name: \"getSlice\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getCustomer.pending, (state:CustomerState) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(getCustomer.fulfilled, (state, action: PayloadAction<user[]>) => {\r\n      state.loading = false;\r\n      state.users = action.payload;\r\n      state.error = \"\";\r\n    });\r\n    builder.addCase(getCustomer.rejected, (state:CustomerState, action) => {\r\n      state.loading = false;\r\n      state.users = [];\r\n      state.error = action.error.message || \"SomeThing Went Wrong\";\r\n    });\r\n  },\r\n});\r\n\r\nexport default customer.reducer;\r\n// export default.getSliceActions  getSlice.actions\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAuB,kBAAkB;AAC/E,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,YAAY,QAAQ,2BAA2B;AACxD;;AAIA,OAAO,MAAMC,WAAW,GAAGJ,gBAAgB,CAAC,sBAAsB,EAAE,YAAY;EAC9E,IAAIK,OAAO,GAAG,wBAAwB;EACtC,OAAO,MAAMH,KAAK,CACfI,GAAG,CAACD,OAAO,GAAG,WAAW,CAAC,CAC1BE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CACjCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;AACzC,CAAC,CAAC;AAGF,MAAMG,QAAQ,GAAGb,WAAW,CAAC;EAC3Bc,IAAI,EAAE,UAAU;EAChBZ,YAAY;EACZa,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACf,WAAW,CAACgB,OAAO,EAAGC,KAAmB,IAAK;MAC5DA,KAAK,CAACC,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC;IACFJ,OAAO,CAACC,OAAO,CAACf,WAAW,CAACmB,SAAS,EAAE,CAACF,KAAK,EAAEG,MAA6B,KAAK;MAC/EH,KAAK,CAACC,OAAO,GAAG,KAAK;MACrBD,KAAK,CAACI,KAAK,GAAGD,MAAM,CAACE,OAAO;MAC5BL,KAAK,CAACV,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC;IACFO,OAAO,CAACC,OAAO,CAACf,WAAW,CAACuB,QAAQ,EAAE,CAACN,KAAmB,EAAEG,MAAM,KAAK;MACrEH,KAAK,CAACC,OAAO,GAAG,KAAK;MACrBD,KAAK,CAACI,KAAK,GAAG,EAAE;MAChBJ,KAAK,CAACV,KAAK,GAAGa,MAAM,CAACb,KAAK,CAACiB,OAAO,IAAI,sBAAsB;IAC9D,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAed,QAAQ,CAACe,OAAO;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}