{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  users: [],\n  error: \"\"\n};\nexport const updateUser = createAsyncThunk(\"users/updateUser\", async data => {\n  let baseUrl = \"http://localhost:8001/\";\n  console.log(\"data\", data);\n  return await axios.patch(baseUrl + `updateuser/${data.id}`, data);\n});\nconst updateSlice = createSlice({\n  name: \"postSlice\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(updateUser.pending, state => {\n      return state;\n    });\n    builder.addCase(updateUser.fulfilled, (state, action) => {\n      state.users = action.payload;\n      state.error = \"There has been a error\";\n    });\n    builder.addCase(updateUser.rejected, (state, action) => {\n      state.users = [];\n      state.error = action.error.message || \"There has been a error\";\n    });\n  }\n});\nexport default updateSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","users","error","updateUser","data","baseUrl","console","log","patch","id","updateSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/faiz.ahmed/Documents/source fuse training/React/Assignments/Assignment 7/client/src/features/Update/Update.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { user } from \"../../Interface/Interface\";\r\n\r\ninterface IIS {\r\n  users: user[];\r\n  error: string;\r\n}\r\n\r\nconst initialState: IIS = {\r\n  users: [],\r\n  error: \"\",\r\n};\r\n\r\nexport const updateUser = createAsyncThunk(\r\n  \"users/updateUser\",\r\n  async (data: any) => {\r\n    let baseUrl: string = \"http://localhost:8001/\";\r\n    console.log(\"data\", data);\r\n    return await axios.patch(baseUrl + `updateuser/${data.id}`, data);\r\n  }\r\n);\r\n\r\nconst updateSlice = createSlice({\r\n  name: \"postSlice\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(updateUser.pending, (state: IIS) => {\r\n      return state;\r\n    });\r\n\r\n    builder.addCase(\r\n      updateUser.fulfilled,\r\n      (state: IIS, action: PayloadAction<any>) => {\r\n        state.users = action.payload;\r\n        state.error = \"There has been a error\";\r\n      }\r\n    );\r\n    builder.addCase(updateUser.rejected, (state: IIS, action) => {\r\n      state.users = [];\r\n      state.error = action.error.message || \"There has been a error\";\r\n    });\r\n  },\r\n});\r\n\r\nexport default updateSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAC/E,OAAOC,KAAK,MAAM,OAAO;AAQzB,MAAMC,YAAiB,GAAG;EACxBC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGL,gBAAgB,CACxC,kBAAkB,EAClB,MAAOM,IAAS,IAAK;EACnB,IAAIC,OAAe,GAAG,wBAAwB;EAC9CC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEH,IAAI,CAAC;EACzB,OAAO,MAAML,KAAK,CAACS,KAAK,CAACH,OAAO,GAAI,cAAaD,IAAI,CAACK,EAAG,EAAC,EAAEL,IAAI,CAAC;AACnE,CAAC,CACF;AAED,MAAMM,WAAW,GAAGb,WAAW,CAAC;EAC9Bc,IAAI,EAAE,WAAW;EACjBX,YAAY;EACZY,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACZ,UAAU,CAACa,OAAO,EAAGC,KAAU,IAAK;MAClD,OAAOA,KAAK;IACd,CAAC,CAAC;IAEFH,OAAO,CAACC,OAAO,CACbZ,UAAU,CAACe,SAAS,EACpB,CAACD,KAAU,EAAEE,MAA0B,KAAK;MAC1CF,KAAK,CAAChB,KAAK,GAAGkB,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACf,KAAK,GAAG,wBAAwB;IACxC,CAAC,CACF;IACDY,OAAO,CAACC,OAAO,CAACZ,UAAU,CAACkB,QAAQ,EAAE,CAACJ,KAAU,EAAEE,MAAM,KAAK;MAC3DF,KAAK,CAAChB,KAAK,GAAG,EAAE;MAChBgB,KAAK,CAACf,KAAK,GAAGiB,MAAM,CAACjB,KAAK,CAACoB,OAAO,IAAI,wBAAwB;IAChE,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAeZ,WAAW,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}