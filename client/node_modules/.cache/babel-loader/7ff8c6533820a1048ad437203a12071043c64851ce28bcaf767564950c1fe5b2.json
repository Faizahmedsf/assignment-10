{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n// defining the initial State\n\nconst initialState = {\n  loading: false,\n  users: [],\n  error: \"\"\n};\nexport const getUser = createAsyncThunk(\"users/getUser\", async () => {\n  let baseUrl = \"http://localhost:8001/\";\n  return await axios.get(baseUrl + \"getuser\").then(response => response.data).catch(error => console.log(error));\n});\nconst getSlice = createSlice({\n  name: \"getSlice\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getUser.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(getUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.users = action.payload;\n      state.error = \"\";\n    });\n    builder.addCase(getUser.rejected, (state, action) => {\n      state.loading = false;\n      state.users = [];\n      state.error = action.error.message || \"SomeThing Went Wrong\";\n    });\n  }\n});\nexport default getSlice.reducer;\n// export default.getSliceActions  getSlice.actions","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","loading","users","error","getUser","baseUrl","get","then","response","data","catch","console","log","getSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/faiz.ahmed/Documents/source fuse training/React/Assignments/Assignment 7 OG/client/src/features/Get/Get.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { IIS, user } from \"../../Interface/Interface\";\r\n\r\n// defining the initial State\r\n\r\nconst initialState: IIS = {\r\n  loading: false,\r\n  users: [],\r\n  error: \"\",\r\n};\r\n\r\nexport const getUser = createAsyncThunk(\"users/getUser\", async () => {\r\n  let baseUrl = \"http://localhost:8001/\";\r\n  return await axios\r\n    .get(baseUrl + \"getuser\")\r\n    .then((response) => response.data)\r\n    .catch((error) => console.log(error));\r\n});\r\n\r\n\r\nconst getSlice = createSlice({\r\n  name: \"getSlice\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getUser.pending, (state:IIS) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(getUser.fulfilled, (state, action: PayloadAction<user[]>) => {\r\n      state.loading = false;\r\n      state.users = action.payload;\r\n      state.error = \"\";\r\n    });\r\n    builder.addCase(getUser.rejected, (state:IIS, action) => {\r\n      state.loading = false;\r\n      state.users = [];\r\n      state.error = action.error.message || \"SomeThing Went Wrong\";\r\n    });\r\n  },\r\n});\r\n\r\nexport default getSlice.reducer;\r\n// export default.getSliceActions  getSlice.actions\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAuB,kBAAkB;AAC/E,OAAOC,KAAK,MAAM,OAAO;AAGzB;;AAEA,MAAMC,YAAiB,GAAG;EACxBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,OAAO,GAAGP,gBAAgB,CAAC,eAAe,EAAE,YAAY;EACnE,IAAIQ,OAAO,GAAG,wBAAwB;EACtC,OAAO,MAAMN,KAAK,CACfO,GAAG,CAACD,OAAO,GAAG,SAAS,CAAC,CACxBE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CACjCC,KAAK,CAAEP,KAAK,IAAKQ,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC,CAAC;AACzC,CAAC,CAAC;AAGF,MAAMU,QAAQ,GAAGf,WAAW,CAAC;EAC3BgB,IAAI,EAAE,UAAU;EAChBd,YAAY;EACZe,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACd,OAAO,CAACe,OAAO,EAAGC,KAAS,IAAK;MAC9CA,KAAK,CAACnB,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC;IACFgB,OAAO,CAACC,OAAO,CAACd,OAAO,CAACiB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAA6B,KAAK;MAC3EF,KAAK,CAACnB,OAAO,GAAG,KAAK;MACrBmB,KAAK,CAAClB,KAAK,GAAGoB,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACjB,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC;IACFc,OAAO,CAACC,OAAO,CAACd,OAAO,CAACoB,QAAQ,EAAE,CAACJ,KAAS,EAAEE,MAAM,KAAK;MACvDF,KAAK,CAACnB,OAAO,GAAG,KAAK;MACrBmB,KAAK,CAAClB,KAAK,GAAG,EAAE;MAChBkB,KAAK,CAACjB,KAAK,GAAGmB,MAAM,CAACnB,KAAK,CAACsB,OAAO,IAAI,sBAAsB;IAC9D,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAeZ,QAAQ,CAACa,OAAO;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}