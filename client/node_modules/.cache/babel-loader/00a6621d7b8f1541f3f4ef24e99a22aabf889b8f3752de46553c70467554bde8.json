{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// defining the initial State\n\nconst initialState = {\n  loading: false,\n  users: [],\n  error: \"\"\n};\nexport const getUser = createAsyncThunk(\"/getuser\", async () => {\n  const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n  return response.data;\n});\nconst getSlice = createSlice({\n  name: \"getSl\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getUser.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(getUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.users = action.payload;\n      state.error = \"\";\n    });\n    builder.addCase(getUser.rejected, (state, action) => {\n      state.loading = false;\n      state.users = [];\n      state.error = action.error.message || \"SomeThing Went Wrong\";\n    });\n  }\n});\nexport default getSlice.reducer;\n// export default.getSliceActions  getSlice.actions","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","loading","users","error","getUser","response","get","data","getSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/faiz.ahmed/Documents/source fuse training/React/Assignments/Assignment 7/client/src/features/Get/Get.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n// defining the initial State\r\ninterface user {\r\n  firstName: string;\r\n  middleName: string;\r\n  lastName: string;\r\n  email: string;\r\n  phone: number;\r\n  role: boolean;\r\n  address: string;\r\n}\r\n\r\ninterface IIS {\r\n  loading: boolean;\r\n  users: any;\r\n  error: string;\r\n}\r\n\r\nconst initialState: IIS = {\r\n  loading: false,\r\n  users: [],\r\n  error: \"\",\r\n};\r\n\r\nexport const getUser = createAsyncThunk(\"/getuser\", async () => {\r\n  const response = await axios\r\n        .get(\"https://jsonplaceholder.typicode.com/users\");\r\n    return response.data;\r\n});\r\n\r\n\r\n\r\nconst getSlice = createSlice({\r\n  name: \"getSl\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: builder => {\r\n    builder.addCase(getUser.pending, (state) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(getUser.fulfilled, (state, action) => {\r\n      state.loading = false;\r\n      state.users = action.payload;\r\n      state.error = \"\";\r\n    });\r\n    builder.addCase(getUser.rejected, (state, action) => {\r\n      state.loading = false;\r\n      state.users = [];\r\n      state.error = action.error.message || \"SomeThing Went Wrong\";\r\n    });\r\n  },\r\n});\r\n\r\nexport default getSlice.reducer;\r\n// export default.getSliceActions  getSlice.actions\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;AAiBA,MAAMC,YAAiB,GAAG;EACxBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,OAAO,GAAGP,gBAAgB,CAAC,UAAU,EAAE,YAAY;EAC9D,MAAMQ,QAAQ,GAAG,MAAMN,KAAK,CACrBO,GAAG,CAAC,4CAA4C,CAAC;EACtD,OAAOD,QAAQ,CAACE,IAAI;AACxB,CAAC,CAAC;AAIF,MAAMC,QAAQ,GAAGV,WAAW,CAAC;EAC3BW,IAAI,EAAE,OAAO;EACbT,YAAY;EACZU,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAEC,OAAO,IAAI;IACxBA,OAAO,CAACC,OAAO,CAACT,OAAO,CAACU,OAAO,EAAGC,KAAK,IAAK;MAC1CA,KAAK,CAACd,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC;IACFW,OAAO,CAACC,OAAO,CAACT,OAAO,CAACY,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACpDF,KAAK,CAACd,OAAO,GAAG,KAAK;MACrBc,KAAK,CAACb,KAAK,GAAGe,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACZ,KAAK,GAAG,EAAE;IAClB,CAAC,CAAC;IACFS,OAAO,CAACC,OAAO,CAACT,OAAO,CAACe,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACd,OAAO,GAAG,KAAK;MACrBc,KAAK,CAACb,KAAK,GAAG,EAAE;MAChBa,KAAK,CAACZ,KAAK,GAAGc,MAAM,CAACd,KAAK,CAACiB,OAAO,IAAI,sBAAsB;IAC9D,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAeZ,QAAQ,CAACa,OAAO;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}