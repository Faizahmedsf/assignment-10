{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\n// import counterReducer from '../features/counter/counterSlice';\n// import reduxLogger from \"redux-logger\";\n\nimport getReducer from \"../features/Get/Get\";\nimport postReducer from \"../features/Post/Post\";\nimport singleUserSlice from \"../features/SingleUser/SingleUser\";\nimport UpdateUser from \"../features/Update/Update\";\nconst rootReducer = combineReducers({\n  getSlice: getReducer,\n  postSlice: postReducer,\n  SingleUser: singleUserSlice,\n  UpdateUser: UpdateUser\n});\n\n// export const store = configureStore({\n//   reducer: rootReducer,\n//   preloadedState\n//   // middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger)\n// });\nexport const makeStore = preloadedState => {\n  return configureStore({\n    reducer: rootReducer,\n    preloadedState\n  });\n};\n\n// console.log(\"Initial State\" , store.getState())\n\nexport const store = makeStore();","map":{"version":3,"names":["combineReducers","configureStore","getReducer","postReducer","singleUserSlice","UpdateUser","rootReducer","getSlice","postSlice","SingleUser","makeStore","preloadedState","reducer","store"],"sources":["C:/Users/faiz.ahmed/Documents/source fuse training/Loopback/Assignment/Loopback Assignment/client/src/app/store.ts"],"sourcesContent":["import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\n// import counterReducer from '../features/counter/counterSlice';\n// import reduxLogger from \"redux-logger\";\nimport type { PreloadedState } from \"@reduxjs/toolkit\";\nimport getReducer from \"../features/Get/Get\";\nimport postReducer from \"../features/Post/Post\";\nimport singleUserSlice from \"../features/SingleUser/SingleUser\";\nimport UpdateUser from \"../features/Update/Update\";\n\nconst rootReducer = combineReducers({\n  getSlice: getReducer,\n  postSlice: postReducer,\n  SingleUser: singleUserSlice,\n  UpdateUser: UpdateUser,\n});\n\n// export const store = configureStore({\n//   reducer: rootReducer,\n//   preloadedState\n//   // middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger)\n// });\nexport const makeStore = (preloadedState?: PreloadedState<RootState>) => {\n  return configureStore({\n    reducer: rootReducer,\n    preloadedState,\n  });\n};\n\n// console.log(\"Initial State\" , store.getState())\n\nexport  const store = makeStore();\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport type AppStore = ReturnType<typeof makeStore>;\nexport type AppDispatch = AppStore[\"dispatch\"];\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE;AACA;;AAEA,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,eAAe,MAAM,mCAAmC;AAC/D,OAAOC,UAAU,MAAM,2BAA2B;AAElD,MAAMC,WAAW,GAAGN,eAAe,CAAC;EAClCO,QAAQ,EAAEL,UAAU;EACpBM,SAAS,EAAEL,WAAW;EACtBM,UAAU,EAAEL,eAAe;EAC3BC,UAAU,EAAEA;AACd,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMK,SAAS,GAAIC,cAA0C,IAAK;EACvE,OAAOV,cAAc,CAAC;IACpBW,OAAO,EAAEN,WAAW;IACpBK;EACF,CAAC,CAAC;AACJ,CAAC;;AAED;;AAEA,OAAQ,MAAME,KAAK,GAAGH,SAAS,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}