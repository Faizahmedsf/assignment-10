{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  users: [],\n  error: \"\"\n};\nexport const updateUser = async (data, id) => {\n  let baseUrl = \"http://localhost:8001/\";\n  // console.log(\"data\" , data);\n  // console.log(\"id\" , id);\n  // return await axios.patch(baseUrl + `updateuser/${id}` , data)\n};\n\nconst updateSlice = createSlice({\n  name: \"postSlice\",\n  initialState,\n  reducers: {\n    updateUser: async action => {\n      let baseUrl = \"http://localhost:8001/\";\n      //   console.log(\"data\", action.data);\n      //   console.log(\"id\", action.id);\n      //   return await axios.patch(baseUrl + `updateuser/${id}`, data);\n    }\n  }\n  //     extraReducers: (builder) => {\n  //         builder.addCase(updateUser.pending , (state) => {\n  //             return state\n  //         })\n\n  //         builder.addCase(updateUser.fulfilled , (state , action) => {\n  //             state.users = action.payload\n  //             state.error = \"There has been a error\"\n  //         })\n  //         builder.addCase(updateUser.rejected , (state , action) => {\n  //             state.users = []\n  //             state.error = action.error.message || \"There has been a error\"\n  //         })\n\n  //     }\n});\n\nexport default updateSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","users","error","updateUser","data","id","baseUrl","updateSlice","name","reducers","action","reducer"],"sources":["C:/Users/faiz.ahmed/Documents/source fuse training/React/Assignments/Assignment 7/client/src/features/Update/Update.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport interface user {\r\n  firstName: string;\r\n  middleName: string;\r\n  lastName: string;\r\n  email: string;\r\n  phone: number;\r\n  role: string;\r\n  address: string;\r\n}\r\n\r\ninterface IIS {\r\n  users: any;\r\n  error: string;\r\n}\r\n\r\nconst initialState: IIS = {\r\n  users: [],\r\n  error: \"\",\r\n};\r\n\r\nexport const updateUser = async (data: any, id: any) => {\r\n  let baseUrl: string = \"http://localhost:8001/\";\r\n  // console.log(\"data\" , data);\r\n  // console.log(\"id\" , id);\r\n  // return await axios.patch(baseUrl + `updateuser/${id}` , data)\r\n};\r\n\r\nconst updateSlice = createSlice({\r\n  name: \"postSlice\",\r\n  initialState,\r\n  reducers: {\r\n    updateUser: async (action) => {\r\n      let baseUrl: string = \"http://localhost:8001/\";\r\n    //   console.log(\"data\", action.data);\r\n    //   console.log(\"id\", action.id);\r\n    //   return await axios.patch(baseUrl + `updateuser/${id}`, data);\r\n    },\r\n  },\r\n  //     extraReducers: (builder) => {\r\n  //         builder.addCase(updateUser.pending , (state) => {\r\n  //             return state\r\n  //         })\r\n\r\n  //         builder.addCase(updateUser.fulfilled , (state , action) => {\r\n  //             state.users = action.payload\r\n  //             state.error = \"There has been a error\"\r\n  //         })\r\n  //         builder.addCase(updateUser.rejected , (state , action) => {\r\n  //             state.users = []\r\n  //             state.error = action.error.message || \"There has been a error\"\r\n  //         })\r\n\r\n  //     }\r\n});\r\n\r\nexport default updateSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAyC,kBAAkB;AAkB/E,MAAMC,YAAiB,GAAG;EACxBC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,IAAS,EAAEC,EAAO,KAAK;EACtD,IAAIC,OAAe,GAAG,wBAAwB;EAC9C;EACA;EACA;AACF,CAAC;;AAED,MAAMC,WAAW,GAAGR,WAAW,CAAC;EAC9BS,IAAI,EAAE,WAAW;EACjBR,YAAY;EACZS,QAAQ,EAAE;IACRN,UAAU,EAAE,MAAOO,MAAM,IAAK;MAC5B,IAAIJ,OAAe,GAAG,wBAAwB;MAChD;MACA;MACA;IACA;EACF;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;AACF,CAAC,CAAC;;AAEF,eAAeC,WAAW,CAACI,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}