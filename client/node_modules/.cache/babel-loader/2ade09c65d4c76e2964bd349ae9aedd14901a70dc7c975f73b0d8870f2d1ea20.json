{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  users: [],\n  error: \"\"\n};\nexport const addUser = createAsyncThunk(\"users/adduser\", async data => {\n  let baseUrl = \"http://localhost:8001/\";\n  return await axios.post(baseUrl + \"postuser\", data).then(response => response.data).catch(error => console.log(error));\n});\nconst postSlice = createSlice({\n  name: \"postSlice\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(addUser.pending, state => {\n      return state;\n    });\n    builder.addCase(addUser.fulfilled, (state, action) => {\n      state.users = action.payload;\n      state.error = \"There has been a error\";\n    });\n    builder.addCase(addUser.rejected, (state, action) => {\n      state.users = [];\n      state.error = action.error.message || \"There has been a error\";\n    });\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","users","error","addUser","data","baseUrl","post","then","response","catch","console","log","postSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/faiz.ahmed/Documents/source fuse training/React/Assignments/Assignment 7/client/src/features/Post/Post.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { IIS, user } from \"../../Interface/Interface\";\r\n\r\nconst initialState: IIS = {\r\n  users: [],\r\n  error: \"\",\r\n};\r\n\r\nexport const addUser = createAsyncThunk(\"users/adduser\", async (data: user) => {\r\n  let baseUrl: string = \"http://localhost:8001/\";\r\n  return await axios\r\n    .post(baseUrl + \"postuser\", data)\r\n    .then((response) => response.data)\r\n    .catch((error) => console.log(error));\r\n});\r\n\r\nconst postSlice = createSlice({\r\n  name: \"postSlice\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(addUser.pending, (state: IIS) => {\r\n      return state;\r\n    });\r\n\r\n    builder.addCase(\r\n      addUser.fulfilled,\r\n      (state: IIS, action: PayloadAction<user[]>) => {\r\n        state.users = action.payload;\r\n        state.error = \"There has been a error\";\r\n      }\r\n    );\r\n    builder.addCase(addUser.rejected, (state: IIS, action) => {\r\n      state.users = [];\r\n      state.error = action.error.message || \"There has been a error\";\r\n    });\r\n  },\r\n});\r\n\r\nexport default postSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAC/E,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAiB,GAAG;EACxBC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,OAAO,GAAGL,gBAAgB,CAAC,eAAe,EAAE,MAAOM,IAAU,IAAK;EAC7E,IAAIC,OAAe,GAAG,wBAAwB;EAC9C,OAAO,MAAMN,KAAK,CACfO,IAAI,CAACD,OAAO,GAAG,UAAU,EAAED,IAAI,CAAC,CAChCG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACJ,IAAI,CAAC,CACjCK,KAAK,CAAEP,KAAK,IAAKQ,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC,CAAC;AACzC,CAAC,CAAC;AAEF,MAAMU,SAAS,GAAGf,WAAW,CAAC;EAC5BgB,IAAI,EAAE,WAAW;EACjBb,YAAY;EACZc,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACd,OAAO,CAACe,OAAO,EAAGC,KAAU,IAAK;MAC/C,OAAOA,KAAK;IACd,CAAC,CAAC;IAEFH,OAAO,CAACC,OAAO,CACbd,OAAO,CAACiB,SAAS,EACjB,CAACD,KAAU,EAAEE,MAA6B,KAAK;MAC7CF,KAAK,CAAClB,KAAK,GAAGoB,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACjB,KAAK,GAAG,wBAAwB;IACxC,CAAC,CACF;IACDc,OAAO,CAACC,OAAO,CAACd,OAAO,CAACoB,QAAQ,EAAE,CAACJ,KAAU,EAAEE,MAAM,KAAK;MACxDF,KAAK,CAAClB,KAAK,GAAG,EAAE;MAChBkB,KAAK,CAACjB,KAAK,GAAGmB,MAAM,CAACnB,KAAK,CAACsB,OAAO,IAAI,wBAAwB;IAChE,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAeZ,SAAS,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}