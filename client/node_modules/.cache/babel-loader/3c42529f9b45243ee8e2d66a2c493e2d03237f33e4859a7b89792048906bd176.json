{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// defining the initial State\n\nconst initialState = {\n  loading: false,\n  users: [],\n  error: ''\n};\nexport const getUser = createAsyncThunk('/getuser', () => {\n  return axios.get(\"https://jsonplaceholder.typicode.com/users\").then(response => response.data);\n});\nconst getSlice = createSlice({\n  name: \"getSlice\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getUser.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(getUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.users = action.payload;\n      state.error = \"\";\n    });\n    builder.addCase(getUser.rejected, (state, action) => {\n      state.loading = false;\n      state.users = [];\n      state.error = action.error.message || \"SomeThing Went Wrong\";\n    });\n  }\n});\nexport default getSlice.reducer;\n// export default.getSliceActions  getSlice.actions","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","loading","users","error","getUser","get","then","response","data","getSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/faiz.ahmed/Documents/source fuse training/React/Assignments/Assignment 7/client/src/features/Get/Get.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n// defining the initial State\r\ninterface user {\r\n    firstName: string,\r\n    middleName: string,\r\n    lastName: string,\r\n    email: string,\r\n    phone: number,\r\n    role: boolean\r\n    address: string,\r\n}\r\n\r\ninterface IIS{\r\n    loading: boolean,\r\n    users: any,\r\n    error: string\r\n}\r\n\r\nconst initialState: IIS = {\r\n    loading: false,\r\n    users: [],\r\n    error: ''\r\n}\r\n\r\nexport const getUser = createAsyncThunk('/getuser' , () => {\r\n    return axios\r\n    .get(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(response => response.data)\r\n})\r\n\r\nconst getSlice = createSlice({\r\n    name: \"getSlice\",\r\n    initialState,\r\n    reducers:{},\r\n    extraReducers: builder => {\r\n        builder.addCase(getUser.pending , state => {\r\n            state.loading= true \r\n        })\r\n        builder.addCase(getUser.fulfilled , (state , action) => {\r\n            state.loading= false\r\n            state.users = action.payload\r\n            state.error = \"\" \r\n        })\r\n        builder.addCase(getUser.rejected , (state , action) => {\r\n            state.loading= false \r\n            state.users = []\r\n            state.error =  action.error.message  || \"SomeThing Went Wrong\"\r\n        })\r\n    }\r\n})\r\n\r\nexport default  getSlice.reducer\r\n// export default.getSliceActions  getSlice.actions"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;AAiBA,MAAMC,YAAiB,GAAG;EACtBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,OAAO,GAAGP,gBAAgB,CAAC,UAAU,EAAG,MAAM;EACvD,OAAOE,KAAK,CACXM,GAAG,CAAC,4CAA4C,CAAC,CACjDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;AACpC,CAAC,CAAC;AAEF,MAAMC,QAAQ,GAAGX,WAAW,CAAC;EACzBY,IAAI,EAAE,UAAU;EAChBV,YAAY;EACZW,QAAQ,EAAC,CAAC,CAAC;EACXC,aAAa,EAAEC,OAAO,IAAI;IACtBA,OAAO,CAACC,OAAO,CAACV,OAAO,CAACW,OAAO,EAAGC,KAAK,IAAI;MACvCA,KAAK,CAACf,OAAO,GAAE,IAAI;IACvB,CAAC,CAAC;IACFY,OAAO,CAACC,OAAO,CAACV,OAAO,CAACa,SAAS,EAAG,CAACD,KAAK,EAAGE,MAAM,KAAK;MACpDF,KAAK,CAACf,OAAO,GAAE,KAAK;MACpBe,KAAK,CAACd,KAAK,GAAGgB,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACb,KAAK,GAAG,EAAE;IACpB,CAAC,CAAC;IACFU,OAAO,CAACC,OAAO,CAACV,OAAO,CAACgB,QAAQ,EAAG,CAACJ,KAAK,EAAGE,MAAM,KAAK;MACnDF,KAAK,CAACf,OAAO,GAAE,KAAK;MACpBe,KAAK,CAACd,KAAK,GAAG,EAAE;MAChBc,KAAK,CAACb,KAAK,GAAIe,MAAM,CAACf,KAAK,CAACkB,OAAO,IAAK,sBAAsB;IAClE,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,eAAgBZ,QAAQ,CAACa,OAAO;AAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}