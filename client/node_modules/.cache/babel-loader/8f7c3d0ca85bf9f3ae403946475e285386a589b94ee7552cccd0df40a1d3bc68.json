{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  users: [],\n  error: \"\"\n};\nexport const addUser = createAsyncThunk(\"users/adduser\", async data => {\n  let baseUrl = \"http://localhost:8001/\";\n  return await axios.post(baseUrl + \"postuser\", data).then(response => response.data).catch(error => console.log(error));\n});\nconst postSlice = createSlice({\n  name: \"postSlice\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(addUser.pending, state => {\n      return state;\n    });\n    builder.addCase(addUser.fulfilled, (state, action) => {\n      state.users = action.payload;\n      state.error = \"There has been a error\";\n    });\n    builder.addCase(addUser.rejected, (state, action) => {\n      state.users = [];\n      state.error = action.error.message || \"There has been a error\";\n    });\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","users","error","addUser","data","baseUrl","post","then","response","catch","console","log","postSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/faiz.ahmed/Documents/source fuse training/React/Assignments/Assignment 7/client/src/features/Post/Post.ts"],"sourcesContent":["import { createSlice , createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport interface user {\r\n    firstName: string;\r\n    middleName: string;\r\n    lastName: string;\r\n    email: string;\r\n    phone: number;\r\n    role: string;\r\n    address: string;\r\n  }\r\n  \r\n  interface IIS {\r\n    users: user[];\r\n    error: string;\r\n  }\r\n  \r\n  const initialState: IIS = {\r\n    users: [],\r\n    error: \"\",\r\n  };\r\n\r\nexport const addUser = createAsyncThunk(\"users/adduser\" , async (data: user) => {\r\n    let baseUrl: string = \"http://localhost:8001/\"\r\n    return await axios.post(baseUrl + \"postuser\" , data)\r\n    .then(response => response.data)\r\n    .catch(error => console.log(error))\r\n});\r\n\r\nconst postSlice = createSlice({\r\n    name:\"postSlice\",\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(addUser.pending , (state:IIS) => {\r\n            return state\r\n        })\r\n        \r\n        builder.addCase(addUser.fulfilled , (state:IIS , action: PayloadAction<user[]>) => {\r\n            state.users = action.payload\r\n            state.error = \"There has been a error\"\r\n        })\r\n        builder.addCase(addUser.rejected , (state , action) => {\r\n            state.users = []\r\n            state.error = action.error.message || \"There has been a error\"\r\n        })\r\n\r\n    }\r\n})\r\n\r\nexport default postSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAGC,gBAAgB,QAAuB,kBAAkB;AAChF,OAAOC,KAAK,MAAM,OAAO;AAkBvB,MAAMC,YAAiB,GAAG;EACxBC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE;AACT,CAAC;AAEH,OAAO,MAAMC,OAAO,GAAGL,gBAAgB,CAAC,eAAe,EAAG,MAAOM,IAAU,IAAK;EAC5E,IAAIC,OAAe,GAAG,wBAAwB;EAC9C,OAAO,MAAMN,KAAK,CAACO,IAAI,CAACD,OAAO,GAAG,UAAU,EAAGD,IAAI,CAAC,CACnDG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACJ,IAAI,CAAC,CAC/BK,KAAK,CAACP,KAAK,IAAIQ,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC,CAAC;AACvC,CAAC,CAAC;AAEF,MAAMU,SAAS,GAAGf,WAAW,CAAC;EAC1BgB,IAAI,EAAC,WAAW;EAChBb,YAAY;EACZc,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACd,OAAO,CAACe,OAAO,EAAIC,KAAS,IAAK;MAC7C,OAAOA,KAAK;IAChB,CAAC,CAAC;IAEFH,OAAO,CAACC,OAAO,CAACd,OAAO,CAACiB,SAAS,EAAG,CAACD,KAAS,EAAGE,MAA6B,KAAK;MAC/EF,KAAK,CAAClB,KAAK,GAAGoB,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACjB,KAAK,GAAG,wBAAwB;IAC1C,CAAC,CAAC;IACFc,OAAO,CAACC,OAAO,CAACd,OAAO,CAACoB,QAAQ,EAAG,CAACJ,KAAK,EAAGE,MAAM,KAAK;MACnDF,KAAK,CAAClB,KAAK,GAAG,EAAE;MAChBkB,KAAK,CAACjB,KAAK,GAAGmB,MAAM,CAACnB,KAAK,CAACsB,OAAO,IAAI,wBAAwB;IAClE,CAAC,CAAC;EAEN;AACJ,CAAC,CAAC;AAEF,eAAeZ,SAAS,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}