{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  users: [],\n  error: \"\"\n};\nexport const updateUser = createAsyncThunk(\"users/updateUser\", async () => {\n  let baseUrl = \"http://localhost:8001/\";\n  console.log(\"data\", data);\n  console.log(\"id\", id);\n  return await axios.patch(baseUrl + `updateuser/${id}`, data);\n});\nconst updateSlice = createSlice({\n  name: \"postSlice\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(updateUser.pending, state => {\n      return state;\n    });\n    builder.addCase(updateUser.fulfilled, (state, action) => {\n      state.users = action.payload;\n      state.error = \"There has been a error\";\n    });\n    builder.addCase(updateUser.rejected, (state, action) => {\n      state.users = [];\n      state.error = action.error.message || \"There has been a error\";\n    });\n  }\n});\nexport default updateSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","users","error","updateUser","baseUrl","console","log","data","id","patch","updateSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["C:/Users/faiz.ahmed/Documents/source fuse training/React/Assignments/Assignment 7/client/src/features/Update/Update.ts"],"sourcesContent":["import { createSlice , createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport interface user {\r\n    firstName: string;\r\n    middleName: string;\r\n    lastName: string;\r\n    email: string;\r\n    phone: number;\r\n    role: string;\r\n    address: string;\r\n  }\r\n  \r\n  interface IIS {\r\n    users: any;\r\n    error: string;\r\n  }\r\n  \r\n  const initialState: IIS = {\r\n    users: [],\r\n    error: \"\",\r\n  };\r\n\r\nexport const updateUser = createAsyncThunk(\"users/updateUser\" , async () => {\r\n    let baseUrl: string = \"http://localhost:8001/\"\r\n    console.log(\"data\" , data);\r\n    console.log(\"id\" , id);\r\n    return await axios.patch(baseUrl + `updateuser/${id}` , data)\r\n    \r\n});\r\n\r\n\r\nconst updateSlice = createSlice({\r\n    name:\"postSlice\",\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(updateUser.pending , (state) => {\r\n            return state\r\n        })\r\n        \r\n        builder.addCase(updateUser.fulfilled , (state , action) => {\r\n            state.users = action.payload\r\n            state.error = \"There has been a error\"\r\n        })\r\n        builder.addCase(updateUser.rejected , (state , action) => {\r\n            state.users = []\r\n            state.error = action.error.message || \"There has been a error\"\r\n        })\r\n\r\n    }\r\n})\r\n\r\nexport default updateSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAGC,gBAAgB,QAAQ,kBAAkB;AACjE,OAAOC,KAAK,MAAM,OAAO;AAkBvB,MAAMC,YAAiB,GAAG;EACxBC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE;AACT,CAAC;AAEH,OAAO,MAAMC,UAAU,GAAGL,gBAAgB,CAAC,kBAAkB,EAAG,YAAY;EACxE,IAAIM,OAAe,GAAG,wBAAwB;EAC9CC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAGC,IAAI,CAAC;EAC1BF,OAAO,CAACC,GAAG,CAAC,IAAI,EAAGE,EAAE,CAAC;EACtB,OAAO,MAAMT,KAAK,CAACU,KAAK,CAACL,OAAO,GAAI,cAAaI,EAAG,EAAC,EAAGD,IAAI,CAAC;AAEjE,CAAC,CAAC;AAGF,MAAMG,WAAW,GAAGb,WAAW,CAAC;EAC5Bc,IAAI,EAAC,WAAW;EAChBX,YAAY;EACZY,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACZ,UAAU,CAACa,OAAO,EAAIC,KAAK,IAAK;MAC5C,OAAOA,KAAK;IAChB,CAAC,CAAC;IAEFH,OAAO,CAACC,OAAO,CAACZ,UAAU,CAACe,SAAS,EAAG,CAACD,KAAK,EAAGE,MAAM,KAAK;MACvDF,KAAK,CAAChB,KAAK,GAAGkB,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACf,KAAK,GAAG,wBAAwB;IAC1C,CAAC,CAAC;IACFY,OAAO,CAACC,OAAO,CAACZ,UAAU,CAACkB,QAAQ,EAAG,CAACJ,KAAK,EAAGE,MAAM,KAAK;MACtDF,KAAK,CAAChB,KAAK,GAAG,EAAE;MAChBgB,KAAK,CAACf,KAAK,GAAGiB,MAAM,CAACjB,KAAK,CAACoB,OAAO,IAAI,wBAAwB;IAClE,CAAC,CAAC;EAEN;AACJ,CAAC,CAAC;AAEF,eAAeZ,WAAW,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}